name: Build and Deploy

on:
    push:
        branches:
            - '*'

jobs:
    build:
        runs-on: ${{ matrix.os }}
        permissions:
            contents: write
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                include:
                    - os: ubuntu-latest
                      platform: linux
                      artifact_extension: ""
                      venv_path: venv/lib/python3.10/site-packages
                    - os: macos-latest
                      platform: mac
                      artifact_extension: ""
                      venv_path: venv/lib/python3.10/site-packages
                    - os: windows-latest
                      platform: win
                      artifact_extension: ".exe"
                      venv_path: venv/Lib/site-packages

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.10'

            - name: Create virtual environment
              run: python -m venv venv
              shell: bash

            - name: Install dependencies
              run: |
                  if [ "$RUNNER_OS" == "Windows" ]; then
                    source venv/Scripts/activate
                  else
                    source venv/bin/activate
                  fi
                  python -m pip install --upgrade pip
                  if [ -f requirements.txt ]; then
                    pip install -r requirements.txt
                  else
                    echo "requirements.txt not found, creating one"
                    pip freeze > requirements.txt
                  fi
                  pip install pyinstaller
              shell: bash

            - name: Build executable
              run: |
                  if [ "$RUNNER_OS" == "Windows" ]; then
                    source venv/Scripts/activate
                  else
                    source venv/bin/activate
                  fi
                  pyinstaller --onefile --icon=icon.ico --paths ${{ matrix.venv_path }} --name "WarpedPinballProgrammer-${{ matrix.platform }}" main.py
              shell: bash

            - name: Upload executable to GitHub Release
              uses: softprops/action-gh-release@v2
              if: ${{ github.event_name == 'release' }}
              with:
                  files: dist/WarpedPinballProgrammer-${{ matrix.platform }}${{ matrix.artifact_extension }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Upload executable as artifact
              uses: actions/upload-artifact@v4
              with:
                name: WarpedPinballProgrammer-${{ matrix.platform }}
                path: dist/WarpedPinballProgrammer-${{ matrix.platform }}${{ matrix.artifact_extension }}
