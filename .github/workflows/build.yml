name: Build Binaries

on:
  pull_request:
    branches: [main]
  release:
    types: [created]

jobs:
  build:
    name: Build on ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            name: linux
            add-data: "uf2:uf2"
            ext: ""
          - os: windows-latest
            name: windows
            add-data: "uf2;uf2"
            ext: ".exe"
          - os: macos-13
            name: macos-x64
            add-data: "uf2:uf2"
            ext: ""
          - os: macos-13-arm64
            name: macos-arm64
            add-data: "uf2:uf2"
            ext: ""

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Clean build dirs (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          if (Test-Path dist) { Remove-Item dist -Recurse -Force }
          if (Test-Path build) { Remove-Item build -Recurse -Force }

      - name: Clean build dirs (Linux/macOS)
        if: runner.os != 'Windows'
        run: rm -rf dist build

      - name: Package with PyInstaller
        shell: bash
        run: |
          pyinstaller --onefile \
            --name TrenchCoat-${{ matrix.name }} \
            --hidden-import mpremote \
            --add-data "${{ matrix.add-data }}" \
            src/main.py

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: TrenchCoat-${{ matrix.name }}
          path: dist/TrenchCoat-${{ matrix.name }}${{ matrix.ext }}
          if-no-files-found: error

  upload_release_assets:
    name: Upload Release Assets
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub release assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/TrenchCoat-linux/TrenchCoat-linux
            artifacts/TrenchCoat-macos-x64/TrenchCoat-macos-x64
            artifacts/TrenchCoat-macos-arm64/TrenchCoat-macos-arm64
            artifacts/TrenchCoat-windows/TrenchCoat-windows.exe
